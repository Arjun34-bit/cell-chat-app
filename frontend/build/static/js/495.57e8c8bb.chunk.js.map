{"version":3,"file":"static/js/495.57e8c8bb.chunk.js","mappings":"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","sources":["componenets/Authentication/SignUp.js","componenets/miscelleneous/LoginviaOTP.js","componenets/Authentication/Login.js","Pages/HomePage.js"],"sourcesContent":["import { VStack } from \"@chakra-ui/layout\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  InputLeftAddon,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Select } from \"@chakra-ui/react\";\r\n\r\nconst countryCodes = [\r\n  { code: \"+91\", country: \"India\" },\r\n  { code: \"+1\", country: \"United States\" },\r\n  { code: \"+44\", country: \"United Kingdom\" },\r\n  // Add more country codes here\r\n];\r\n\r\nfunction SignUp({ history }) {\r\n  const [show, setShow] = useState(false);\r\n  const [showcp, setShowcp] = useState(false);\r\n  const [name, setName] = useState();\r\n  const [phone, setPhone] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [confirmpassword, setConfirmpassword] = useState();\r\n  const [pic, setPic] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [toastShown, setToastShown] = useState(false);\r\n  const toast = useToast();\r\n  const navigate = useNavigate();\r\n\r\n  const postDetails = (pics) => {\r\n    setLoading(true);\r\n    if (pics === undefined) {\r\n      toast({\r\n        title: \"Please Select an Image\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"cell-app\");\r\n      data.append(\"cloud_name\", \"cell-chat-app\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/cell-chat-app/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      toast({\r\n        title: \"Please Select (JPEG or PNG) Image\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleClickP = () => setShow(!show);\r\n  const handleClickCP = () => setShowcp(!showcp);\r\n\r\n  const submitHandler = async () => {\r\n    setLoading(true);\r\n    if (!name || !phone || !email || !password || !confirmpassword) {\r\n      // if (!toastShown) {\r\n      toast({\r\n        title: \"Please fill all fields\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      // }\r\n      // setToastShown(true);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    setToastShown(false);\r\n\r\n    if (password.length < 6) {\r\n      toast({\r\n        title: \"Required more than 6 characters/digits\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmpassword) {\r\n      toast({\r\n        title: \"Passwords are not Matching\",\r\n        status: \"error\",\r\n        duration: 1500,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/users/\",\r\n        { name, email, phone, password, pic },\r\n        config\r\n      );\r\n      toast({\r\n        title: \"Registration Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n      navigate(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Registration Failure\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      setLoading(false);\r\n      // console.log(error);\r\n    }\r\n  };\r\n\r\n  const passwordValidation = (e) => {\r\n    setPassword(e.target.value);\r\n    if (e.target.value < 6) {\r\n      toast({\r\n        title: \"Password length should be atleast 6\",\r\n        status: \"info\",\r\n        duration: 1500,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"5px\" fontFamily={\"work sans\"}>\r\n      <FormControl id=\"name\" isRequired>\r\n        <FormLabel>Name :</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Your Name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        ></Input>\r\n      </FormControl>\r\n\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email :</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Your Email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        ></Input>\r\n      </FormControl>\r\n\r\n      <FormControl id=\"phone\" isRequired>\r\n        {/* <Select size=\"sm\" colorScheme=\"black\" color={\"turquoise\"}>\r\n          {countryCodes.map((country) => (\r\n            <option key={country.code} value={country.code}>\r\n              {country.country} ({country.code})\r\n            </option>\r\n          ))}\r\n        </Select> */}\r\n        <FormLabel>Contact :</FormLabel>\r\n        <InputGroup>\r\n          <InputLeftAddon color={\"black\"} children=\"+91\" />\r\n          <Input\r\n            placeholder=\"Enter Your Contact No.\"\r\n            onChange={(e) => setPhone(e.target.value)}\r\n          ></Input>\r\n        </InputGroup>\r\n      </FormControl>\r\n\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password :</FormLabel>\r\n        <InputGroup>\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Aleast 6 Characters or Digits\"\r\n            onChange={passwordValidation}\r\n          ></Input>\r\n          <InputRightElement width={\"4.5rem\"}>\r\n            <Button h=\"1.75rem\" size={\"sm\"} onClick={handleClickP}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n\r\n      <FormControl id=\"confirmpassword\" isRequired>\r\n        <FormLabel>Confirm Password :</FormLabel>\r\n        <InputGroup>\r\n          <Input\r\n            type={showcp ? \"text\" : \"password\"}\r\n            placeholder=\"Re-enter Your Password\"\r\n            onChange={(e) => setConfirmpassword(e.target.value)}\r\n          ></Input>\r\n          <InputRightElement width={\"4.5rem\"} onClick={handleClickCP}>\r\n            <Button h=\"1.75rem\" size={\"sm\"}>\r\n              {showcp ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n\r\n      <FormControl id=\"pic\">\r\n        <FormLabel>Upload Profile Pic</FormLabel>\r\n        <Input\r\n          type=\"file\"\r\n          p={\"1.5\"}\r\n          accept=\"image/*\"\r\n          onChange={(e) => postDetails(e.target.files[0])}\r\n        ></Input>\r\n      </FormControl>\r\n\r\n      <Button\r\n        className=\"action-buttons\"\r\n        fontWeight={\"bold\"}\r\n        width={\"100%\"}\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={loading}\r\n      >\r\n        Register Your Cell-Chat account\r\n      </Button>\r\n    </VStack>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  IconButton,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Text,\r\n  useDisclosure,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport axios from \"axios\";\r\nimport OtpInput from \"otp-input-react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst LoginviaOTP = ({ children }) => {\r\n  const [email, setEmail] = useState();\r\n  const [otp, setOtp] = useState(false);\r\n  const [err, setErr] = useState(false);\r\n  const [spin, setSpin] = useState(false);\r\n  const [otpval, setOtpVal] = useState();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const toast = useToast();\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const sendOTP = async () => {\r\n    if (!email) {\r\n      toast({\r\n        title: \"Please enter Valid Email\",\r\n        status: \"warning\",\r\n        duration: 3000,\r\n        position: \"bottom\",\r\n        isClosable: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/otp\", { email }, config);\r\n      setOtp(true);\r\n      setErr(false);\r\n      setLoading(false);\r\n      toast({\r\n        title: \"OTP sent to your Email\",\r\n        status: \"success\",\r\n        duration: 3000,\r\n        position: \"bottom\",\r\n        isClosable: true,\r\n      });\r\n      return;\r\n    } catch (error) {\r\n      setOtp(false);\r\n      setErr(true);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const verifyOTP = async () => {\r\n    if (!otpval) {\r\n      toast({\r\n        title: \"Please enter you OTP\",\r\n        status: \"warning\",\r\n        duration: 3000,\r\n        position: \"bottom\",\r\n        isClosable: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      toast({\r\n        title: \"Signing In....\",\r\n        status: \"loading\",\r\n        duration: 2000,\r\n        position: \"top\",\r\n        isClosable: true,\r\n      });\r\n      // setSpin(true);\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/otp/verify\", { otpval }, config);\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      navigate(\"/chats\");\r\n      // setSpin(false);\r\n    } catch (error) {\r\n      // setSpin(false);\r\n      toast({\r\n        title: \"Invalid OTP\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        position: \"bottom\",\r\n        isClosable: true,\r\n      });\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span onClick={onOpen}>{children}</span>\r\n\r\n      <Modal blockScrollOnMount={false} isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent bg={\"black\"} color={\"white\"} fontFamily={\"work sans\"}>\r\n          <ModalHeader display={\"flex\"} justifyContent={\"center\"}>\r\n            Login via OTP\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <FormControl id=\"email\" isRequired>\r\n              <FormLabel>Email :</FormLabel>\r\n              <Input\r\n                placeholder=\"Enter Your Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Input>\r\n              {err ? (\r\n                <Box color=\"red\" fontWeight={\"bold\"} fontFamily={\"work sans\"}>\r\n                  <div pl={2}>Email Not registered</div>\r\n                </Box>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </FormControl>\r\n            <Box display={\"flex\"} justifyContent={\"center\"}>\r\n              <Button\r\n                colorScheme=\"blue\"\r\n                mt={3}\r\n                width={\"100%\"}\r\n                onClick={sendOTP}\r\n                isLoading={loading}\r\n              >\r\n                Send OTP\r\n              </Button>\r\n            </Box>\r\n\r\n            {otp ? (\r\n              <Box mt={5}>\r\n                <div>\r\n                  <FormControl id=\"phone\" isRequired>\r\n                    <FormLabel>Enter OTP :</FormLabel>\r\n                    <Box\r\n                      display=\"flex\"\r\n                      justifyContent={\"center\"}\r\n                      color={\"black\"}\r\n                    >\r\n                      <OtpInput\r\n                        OTPLength={4}\r\n                        otpType=\"number\"\r\n                        autoFocus\r\n                        value={otpval}\r\n                        onChange={setOtpVal}\r\n                      ></OtpInput>\r\n                    </Box>\r\n                  </FormControl>\r\n                  <Box display={\"flex\"} justifyContent={\"center\"}>\r\n                    <Button\r\n                      colorScheme=\"blue\"\r\n                      mt={3}\r\n                      width={\"100%\"}\r\n                      onClick={verifyOTP}\r\n                    >\r\n                      Verify OTP & Login\r\n                    </Button>\r\n                  </Box>\r\n                </div>\r\n              </Box>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </ModalBody>\r\n\r\n          <ModalFooter></ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginviaOTP;\r\n","import { VStack } from \"@chakra-ui/layout\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport React from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  ScaleFade,\r\n  Tooltip,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport LoginviaOTP from \"../miscelleneous/LoginviaOTP\";\r\n\r\nfunction Login({ history }) {\r\n  const { isOpen, isClose, onToggle } = useDisclosure();\r\n  const [phone, setPhone] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [show, setShow] = useState();\r\n  const [loading, setLoading] = useState();\r\n  const navigate = useNavigate();\r\n  const [toastShown, setToastShown] = useState();\r\n  const toast = useToast();\r\n\r\n  const handleClick = () => setShow(!show);\r\n\r\n  const submitHandler = async () => {\r\n    setLoading(true);\r\n    if (!phone || !password) {\r\n      if (!toastShown) {\r\n        toast({\r\n          title: \"Please fill all Fields\",\r\n          status: \"warning\",\r\n          duration: 5000,\r\n          position: \"bottom\",\r\n          isClosable: true,\r\n        });\r\n      }\r\n      setToastShown(true);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    setToastShown(false);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"api/users/login\",\r\n        { phone, password },\r\n        config\r\n      );\r\n\r\n      toast({\r\n        title: \"Login Successful, You Will Be Remembered\",\r\n        status: \"success\",\r\n        duration: 4000,\r\n        position: \"bottom\",\r\n        isClosable: true,\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      navigate(\"/chats\");\r\n      setLoading(false);\r\n      return;\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Failure in Login\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 1500,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"5px\" fontFamily={\"work sans\"}>\r\n      <FormControl id=\"phone\" isRequired>\r\n        <FormLabel>Contact :</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Your Contact No.\"\r\n          value={phone}\r\n          onChange={(e) => setPhone(e.target.value)}\r\n        ></Input>\r\n      </FormControl>\r\n\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password :</FormLabel>\r\n        <InputGroup>\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter Your Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Input>\r\n          <InputRightElement width={\"4.5rem\"}>\r\n            <Button h=\"1.75rem\" size={\"sm\"} onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n\r\n      <Button\r\n        fontWeight={\"bold\"}\r\n        color={\"black\"}\r\n        variant=\"solid\"\r\n        colorScheme=\"gray\"\r\n        width={\"100%\"}\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={loading}\r\n      >\r\n        Login\r\n      </Button>\r\n\r\n      <Button\r\n        variant=\"solid\"\r\n        colorScheme=\"blackAlpha\"\r\n        width=\"100%\"\r\n        onClick={() => {\r\n          setPhone(1234567890);\r\n          setPassword(\"guest@10\");\r\n        }}\r\n      >\r\n        Try the Guest Mode\r\n      </Button>\r\n      <div textAlign=\"center\" fontWeight=\"bold\">\r\n        OR\r\n      </div>\r\n      <Tooltip label=\"working-on-it\">\r\n        {/* <ScaleFade initialScale={0.9} in={isOpen}> */}\r\n        <LoginviaOTP>\r\n          <Button variant=\"solid\" colorScheme=\"blue\" width=\"100%\">\r\n            Login via OTP\r\n          </Button>\r\n        </LoginviaOTP>\r\n        {/* </ScaleFade> */}\r\n      </Tooltip>\r\n    </VStack>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Box,\r\n  Text,\r\n  Tabs,\r\n  Tab,\r\n  TabPanels,\r\n  TabPanel,\r\n  TabList,\r\n  useDisclosure,\r\n  ScaleFade,\r\n} from \"@chakra-ui/react\";\r\nimport SignUp from \"../componenets/Authentication/SignUp\";\r\nimport Login from \"../componenets/Authentication/Login\";\r\nimport { useEffect } from \"react\";\r\nimport cellchat from \"../Images/cellchat.jpg\";\r\nimport { ChatIcon } from \"@chakra-ui/icons\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst HomePage = () => {\r\n  const { isOpen, isClose, onToggle } = useDisclosure();\r\n  const { loggedIn, setLoggedIn } = ChatState();\r\n\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n    if (userInfo) {\r\n      setLoggedIn(true);\r\n      navigate(\"chats\");\r\n    }\r\n  });\r\n\r\n  window.addEventListener(\"beforeunload\", function (e) {\r\n    e.preventDefault();\r\n    window.history.forward();\r\n  });\r\n\r\n  return (\r\n    <Container maxW=\"xl\" marginTop={\"1\"}>\r\n      <Box\r\n        className=\"cell-box\"\r\n        display=\"flex\"\r\n        flex-basis=\"200px\"\r\n        justifyContent={\"center\"}\r\n        p={3}\r\n        bg={\"white\"}\r\n        w=\"100%\"\r\n        m=\"40px 0 15px 0\"\r\n        borderRadius=\"lg\"\r\n        borderWidth=\"0.5px\"\r\n      >\r\n        <hr style={{ color: \"green\" }} />\r\n        <img\r\n          src={cellchat}\r\n          alt=\"cell-chat\"\r\n          style={{ width: \"100px\", height: \"100px\" }}\r\n        />\r\n        <hr style={{ color: \"green\" }} />\r\n        {/* <Text\r\n          fontSize={\"3xl\"}\r\n          fontFamily={\"work sans\"}\r\n          color={\"black\"}\r\n          textAlign={\"center\"}\r\n        >\r\n          <ChatIcon marginRight={\"1\"}></ChatIcon>\r\n          <span>Cell-Chat</span>\r\n          <sub>(ßeta)</sub>\r\n        </Text> */}\r\n      </Box>\r\n      <Box\r\n        w=\"100%\"\r\n        p={4}\r\n        bg={\"#4CAF50\"}\r\n        borderRadius={\"lg\"}\r\n        color={\"black\"}\r\n        borderWidth={\"1px\"}\r\n        className=\"component-box\"\r\n      >\r\n        <Tabs variant=\"unstyled\">\r\n          <TabList\r\n            mb={\"1em\"}\r\n            fontSize={\"3xl\"}\r\n            fontFamily={\"work sans\"}\r\n            textAlign={\"center\"}\r\n          >\r\n            <Tab\r\n              _selected={{ color: \"white\", bg: \"blue.500\" }}\r\n              width={\"50%\"}\r\n              color={\"black\"}\r\n            >\r\n              Login\r\n            </Tab>\r\n            <Tab\r\n              _selected={{ color: \"white\", bg: \" blue.400\" }}\r\n              width={\"50%\"}\r\n              color={\"black\"}\r\n              onClick={onToggle}\r\n            >\r\n              Sign Up\r\n            </Tab>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel>\r\n              {/* <ScaleFade initialScale={0.9} in={isOpen}> */}\r\n              <Login />\r\n              {/* </ScaleFade> */}\r\n            </TabPanel>\r\n            <TabPanel>\r\n              {/* <ScaleFade initialScale={0.9} in={isOpen}> */} <SignUp />\r\n              {/* </ScaleFade> */}\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["_ref","history","_useState","useState","_useState2","_slicedToArray","show","setShow","_useState3","_useState4","showcp","setShowcp","_useState5","_useState6","name","setName","_useState7","_useState8","phone","setPhone","_useState9","_useState10","email","setEmail","_useState11","_useState12","password","setPassword","_useState13","_useState14","confirmpassword","setConfirmpassword","_useState15","_useState16","pic","setPic","_useState17","_useState18","loading","setLoading","_useState19","_useState20","setToastShown","toast","useToast","navigate","useNavigate","submitHandler","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$post","data","wrap","_context","prev","next","title","status","duration","isClosable","position","abrupt","length","headers","axios","sent","localStorage","setItem","JSON","stringify","t0","description","response","message","stop","apply","arguments","_jsxs","VStack","spacing","fontFamily","children","FormControl","id","isRequired","_jsx","FormLabel","Input","placeholder","onChange","e","target","value","InputGroup","InputLeftAddon","color","type","InputRightElement","width","Button","h","size","onClick","p","accept","pics","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","console","log","postDetails","files","className","fontWeight","style","marginTop","isLoading","otp","setOtp","setErr","otpval","setOtpVal","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","sendOTP","verifyOTP","_ref3","_callee2","_yield$axios$post2","_context2","_Fragment","Modal","blockScrollOnMount","ModalOverlay","ModalContent","bg","ModalHeader","display","justifyContent","ModalCloseButton","ModalBody","Box","pl","colorScheme","mt","OtpInput","OTPLength","otpType","autoFocus","ModalFooter","isClose","onToggle","toastShown","variant","textAlign","Tooltip","label","LoginviaOTP","_ChatState","ChatState","setLoggedIn","loggedIn","useEffect","parse","getItem","window","addEventListener","preventDefault","forward","Container","maxW","w","m","borderRadius","borderWidth","src","cellchat","alt","height","Tabs","TabList","mb","fontSize","Tab","_selected","TabPanels","TabPanel","Login","SignUp"],"sourceRoot":""}